#
# Create an amazon2 docker container.
#   $> docker build -t  genny/ubuntu:2004 ./ -f docker/Dockerfile.2004 --no-cache --rm=true
#   $> docker run -v /etc/pki:/etc/pki -it genny/ubuntu:2004
#     OR with populate /etc/hosts
#   $> docker run --add-host mongod0.dsitest.dev:10.2.0.200 \
#                 --add-host mongod1.dsitest.org:10.2.0.201 \
#                 --add-host mongod2.dsitest.org:10.2.0.202 \
#                 -v /etc/pki:/etc/pki \
#                 -it genny/ubuntu:2004
#
#   # docker compose yml has extra_hosts for hostnames
#   $> docker-compose -f docker/docker-compose.yml down --remove-orphans
#   $> docker-compose -f docker/docker-compose.yml up -d --scale genny=2 && docker/download-client-metrics.sh
#
FROM ubuntu:20.04

RUN apt-get update

# Install some build related libraries
RUN apt-get install -y libsnappy-dev \
                       gcc \
                       build-essential \
                       git \
                       curl \
                       sudo \
                       libsnappy-dev \
                       libfl-dev

RUN curl -o libicu60_60.2-3ubuntu3_amd64.deb http://archive.ubuntu.com/ubuntu/pool/main/i/icu/libicu60_60.2-3ubuntu3_amd64.deb &&\
    dpkg -i libicu60_60.2-3ubuntu3_amd64.deb && \
    rm -f /usr/lib/x86_64-linux-gnu/libicuuc.so.60 && \
    ln -s   /usr/lib/x86_64-linux-gnu/libicuuc.so.66.1 /usr/lib/x86_64-linux-gnu/libicuuc.so.60


# Ensure python 3.8 is installed and setup a virtual env.
RUN apt-get update && \
    apt-get install -y python3.8 \
                       python3-distutils \
                       python3-pip \
                       python3-apt \
                       python3.8-venv
RUN python3.8 -m venv /venv
ENV PATH=/venv/bin:$PATH

RUN mkdir -p /data/mci /data/workdir

# Create a docker user and add the required paths
# Create a genny user and add the required paths
RUN useradd -d /home/docker-user -m docker-user
RUN chown docker-user /data/mci /data/workdir
RUN curl -o toolchain_installer.sh http://mongodbtoolchain.build.10gen.cc/installer.sh
RUN USER=docker-user bash toolchain_installer.sh

## Add genny to image (.dockerignore controls the files copied).
ADD --chown=docker-user . / /data/workdir/src/genny/

# Build and install genny as docker-user.
WORKDIR /data/workdir/src/genny/
USER docker-user

## creating the genny-setup-done-v2 fails on the first run due to not being in a git repo.
## So ... run it twice (to be sure, to be sure ;-).
RUN ./run-genny -v install --build-system make --linux-distro ubuntu1804 -- -DCMAKE_BUILD_TYPE=Debug || \
    ./run-genny -v install --build-system make --linux-distro ubuntu1804 -- -DCMAKE_BUILD_TYPE=Debug

## CMD ./run-genny workload -- -v debug run  --mongo-uri "${MONGO_URI:-mongodb://10.2.0.200}" --workload-file "${WORKLOAD_FILE:-src/workloads/issues/PERF-2494-Excessive-MongoS-Latencies.yml}"
