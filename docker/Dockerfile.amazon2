#
# Create an amazon2 docker container.
#   $> docker build -t  genny/amazon:2 ./ -f docker/Dockerfile.amazon2 --no-cache --rm=true
#   $> docker run -v /etc/pki:/etc/pki -it genny/amazon:2
#     OR populate /etc/hosts with --add-host
#   $> docker run --add-host mongod0.dsitest.org:10.2.0.200 \
#                 --add-host mongod1.dsitest.org:10.2.0.201 \
#                 --add-host mongod2.dsitest.org:10.2.0.202 \
#                 -v /etc/pki:/etc/pki \
#                 -it genny/amazon:2
#
#   # docker compose yml has extra_hosts for hostnames
#   $> docker-compose -f docker/docker-compose.yml down --remove-orphans
#
#   $> docker-compose --env-file docker/client-variables.env -f docker/docker-compose.yml up -d --scale genny=2 && docker/download-client-metrics.sh
#
FROM amazonlinux:2 AS python

RUN yum install -y amazon-linux-extras && \
    amazon-linux-extras enable python3.8 && \
    yum -y install python3.8 python38-venv && \
    python3.8 -m venv /venv

ENV PATH=/venv/bin:$PATH

FROM python AS cpp

RUN yum -y install shadow-utils \
                   yum-utils \
                   sudo \
                   tar \
                   git \
                   gcc \
                   c++ \
                   cmake \
                   make \
                   libzstd && \
    adduser -ms /bin/bash  docker-user && \
    mkdir -p /data/mci /data/workdir && \
    chown docker-user /data/mci /data/workdir  && \
    curl -o toolchain_installer.sh http://mongodbtoolchain.build.10gen.cc/installer.sh && \
    USER=docker-user bash toolchain_installer.sh

FROM cpp AS genny

## Add genny to image (.dockerignore controls the files copied).
ADD --chown=docker-user . / /data/workdir/src/genny/

# Build and install genny as docker-user.
WORKDIR /data/workdir/src/genny/
USER docker-user

## creating the genny-setup-done-v2 fails on the first run due to not being in a git repo.
## So ... run it twice (to be sure, to be sure ;-).
RUN ./run-genny -v install --build-system make --linux-distro amazon2 -- -DCMAKE_BUILD_TYPE=Debug || \
    ./run-genny -v install --build-system make --linux-distro amazon2 -- -DCMAKE_BUILD_TYPE=Debug

# CMD ./run-genny workload -- -v debug run  --mongo-uri "${MONGO_URI:-mongodb://10.2.0.200}" --workload-file "${WORKLOAD_FILE:-src/workloads/issues/PERF-2494-Excessive-MongoS-Latencies.yml}"
